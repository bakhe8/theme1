{"version":3,"file":"index.js","sources":["../../src/helpers/numbers.ts","../../src/helpers/url.ts","../../src/helpers/index.ts","../../src/helpers/string.ts","../../src/logger.ts","../../src/config.ts","../../src/event.ts","../../src/storage.ts","../../src/cookie.ts","../../src/index.ts"],"sourcesContent":["/**\n * @param num\n * @param {boolean} isToEnglish\n * @return {string}\n */\nexport function number(num, isToEnglish = false) {\n    num = num + \"\";//make sure that number will be converted to string;\n    isToEnglish = isToEnglish || !Salla.config.get('store.settings.arabic_numbers_enabled');\n    let ar = ['Ù ', 'Ù¡', 'Ù¢', 'Ù£', 'Ù¤', 'Ù¥', 'Ù¦', 'Ù§', 'Ù¨', 'Ù©'];\n    let en = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    let find = isToEnglish ? ar : en;\n    let replace = isToEnglish ? en : ar;\n    let regex;\n    for (let i = 0; i < find.length; i++) {\n        regex = new RegExp(find[i], \"g\");\n        num = num.replace(regex, replace[i]);\n    }\n    //todo:: replace dots between two digits only, to avoid replacing the period\n    return num.replace(isToEnglish ? 'Ù«' : '.', isToEnglish ? '.' : 'Ù«');\n}\n\n/**\n * when need to get digit's only from string \"Jamal12Hi\" => 12, or \"Ù¡Ù¢Ù£\" => 123\n * @param {string} num\n * @return {string}\n */\nexport function digitsOnly(num) {\n    return number(num, true).replace(/[^0-9.]/g, '')\n        .replace('..', '.')\n        .rtrim('.'); // without this: `Salla.helpers.digitsOnly('Ù¡Ù¬Ù¦Ù Ù  Ø±.Ø³')` => `1600.`\n}\n\n/**\n * @param {HTMLInputElement|string} input - selector or input object\n * @param {boolean} is_decimal\n * @return {string|*|void}\n */\nexport function inputDigitsOnly(input, is_decimal = false) {\n    if (typeof input == 'string') {\n        return document.querySelectorAll(input).forEach(el => inputDigitsOnly(el, is_decimal));\n    }\n    if (!input) {\n        Salla.logger.warn('Can\\'t find Object With Id: ' + input);\n        return;\n    }\n    let new_val = Salla.helpers.digitsOnly(input.value);\n\n    if (input.min && new_val < parseInt(input.min)) {\n        return input.value = input.min;\n    }\n    if (input.max && new_val > parseInt(input.max)) {\n        return input.value = input.max;\n    }\n    if (input.maxLength >= 1 && new_val.toString().length > input.maxLength) {\n        return input.value = new_val.toString().substring(0, input.maxLength);\n    }\n\n    return input.value = (is_decimal || input.dataset.hasOwnProperty('digitsWithDecimal'))\n        ? getOnlyDecimal(new_val)\n        : new_val.replace(/\\D/g, '');\n}\n\nexport function getOnlyDecimal(value) {\n    let dotsCount = (`${value}`.match(/\\./g) || []).length;\n    if (!dotsCount || dotsCount === 1) {\n        return value;\n    }\n\n    // if there is more than one dotes, remove the last dot.\n    // Ex: 123.545.66 => 123.54566\n    return getOnlyDecimal(value.replace(/\\.(.+)\\./g, '.$1'));\n}\n\n/**\n * @param {string|number|{amount: number,currency: string}} money\n * @return string\n */\nexport function money(money, useSarSymbolIfEnabled = true) {\n    let currency = Salla.config.currency(money?.currency).symbol;\n    money = typeof money === 'object' ? money.amount : money;\n    money = number(money) + ' ' + currency;\n    if(useSarSymbolIfEnabled && ['SAR', 'Ø±.Ø³'].includes(currency) && Salla.config.get('store.settings.use_sar_symbol')){\n        money = money.replace(currency, '<i class=sicon-sar></i>');\n    }\n    return money;\n}","export function is_full_url(url) {\n  return `${url}`.startsWith('https://') || `${url}`.startsWith('http://');\n}\n\n/**\n * @param {string } url\n * @return string\n */\nexport function base(url) {\n    if (is_full_url(url)) {\n        return url;\n    }\n\n    const { hostname } = new URL(get('/'));\n\n    return 'https://' + hostname + \"/\" + url?.ltrim(\"/\");\n}\n\n/**\n * @param {string } url\n * @return string\n */\nexport function get(url) {\n  if (is_full_url(url)) {\n    return url;\n  }\n\n  let storeUrl = Salla.config.get(\"store.url\");\n\n  if(!storeUrl){\n      storeUrl = window.location.href.split(\"/\").slice(0, -1).join(\"/\");\n      Salla.config.set('store.url', storeUrl)\n  }\n\n  return storeUrl.rtrim(\"/\") + \"/\" + url?.ltrim(\"/\");\n}\n\nexport function domain(url) {\n  if (is_full_url(url)) {\n    return url;\n  }\n\n  return `${Salla.config.get(\"store.url\", window.location.href.split(\"/\").slice(0, -1).join(\"/\")).rtrim(\"/\")}/${url?.ltrim(\"/\")}`\n}\n\nexport function addParamToUrl(key, value, url) {\n  url = url || window.location.href;\n  if (!value || !key) {\n    return url;\n  }\n  let regex = new RegExp(\"([?&])\" + key + \"=[^&]+[&]?\", \"g\");\n  url = url\n    .replace(regex, \"$1\") //remove old one\n    .split('#')[0]//remove any hash values ex 'https://my_site.test/brands#brand-section-1'\n    .replace(/&$|\\?$/, \"\");// remove the `?` or `&` if it's the last char\n  if (url.includes(\"?\")) {\n    url += \"&\";\n  } else {\n    //avoid cases like this: 'https://my_store.test/ar?test=hi'\n    url += (url.endsWith('/') ? \"\" : \"/\") + \"?\";\n  }\n\n  return (url + key + \"=\" + encodeURIComponent(value)).replace(/&$|\\?$/, \"\");\n}\n\n//this will get it without username if it's salla domain ex: Salla.sa/test will ignore test\nexport function baseUrl(path) {\n  return window.location.origin + \"/\" + path?.ltrim(\"/\");\n}\n\nexport function asset(path) {\n  if (is_full_url(path)) {\n    return path;\n  }\n  if (Salla.config.get('theme.assets')) {\n    return Salla.config.get('theme.assets').replace(':path',path?.ltrim(\"/\"));\n  }\n\n  return baseUrl(\"themes/\" + Salla.config.get(\"theme.name\") + \"/\" + path?.ltrim(\"/\"));\n}\n\nexport function cdn(path, width, height) {\n  let cdnUrl = \"https://cdn.salla.network/\";\n  if (width || height) {\n    width = width ? `,width=${width}` : '';\n    height = height ? `,height=${height}` : '';\n    cdnUrl += `cdn-cgi/image/fit=scale-down${width}${height},onerror=redirect,format=auto/`;\n  }\n\n  return cdnUrl + path?.ltrim(\"/\");\n}\n\n\n/**\n * Constructs a URL based on the provided type and value.\n * \n * @param type - The type of URL to create.\n * @param value - The value to be used in the URL. This is directly returned if type is 'custom'.\n * @returns {string}\n */\n\nexport function create(type, value) {\n  if (type === 'custom') {\n    return value;\n  }\n  if (type === 'offers') {\n    return get(type);\n  }\n  return get(`redirect/${type}/${value}`);\n}\n\n/**\n * Return url for api\n * @example Salla.url.api('test') => https://my_store.test/api/v1/test\n * @param path\n * @return {string}\n */\nexport function api(path) {\n  return Salla.config.get(\"store.api\", get(\"\"))?.rtrim(\"/\") + \"/\" + path?.ltrim(\"/\");\n}\n\nexport function is_page(pageName) {\n  return pageName && Salla.config.get(\"page.slug\") === pageName;\n}\n\nexport function is_placeholder(url) {\n  return asset(salla.config.get('theme.settings.placeholder')) === asset(url);\n}","import { digitsOnly, inputDigitsOnly, money, number } from \"./numbers\";\nimport './string';\nimport lodashGet from \"lodash/get.js\";\nimport * as url from \"./url\";\n\n/**\n * To use it, you need some moves:\n * 1- First   : you should have global variable:`let my_debounce;`\n * 2- Next    : make your own function: `function my_debounce_fn(callback,...data){...}`\n * 3- Next    : in your method, check if it's not existed yet, use this helper method to create it: `if(!my_debounce){my_debounce=Salla.helpers.debounce((fn, ...inner_data) => fn(...inner_data), 500)}`\n * 4- Next    : then delay the passed callback: `my_debounce(callback, ...data);`\n * 5- Finally : use it: `my_debounce(() =>{...yourRepeatableLogic})`\n * will be something like:\n *\n * ```\n * let my_debounce;\n * function my_debounce_fn(callback,...data){\n *     if(!my_debounce){\n *          //inline method\n *          my_debounce=Salla.helpers.debounce((fn, ...inner_data) => fn(...inner_data), 500);\n *     }\n *     return my_debounce(callback, ...data);\n * }\n * // use it like:\n * my_debounce_fn((my_data)=>Salla.log(my_data), 'hello there - 1');\n * my_debounce_fn((my_data)=>Salla.log(my_data), 'hello there - 2');\n * my_debounce_fn((my_data)=>Salla.log(my_data), 'hello there - 3');\n * my_debounce_fn((my_data)=>Salla.log(my_data), 'hello there - 4');\n * //output=> `hello there - 4`\n * ```\n * ðŸ˜ŽOr just use Salla appHelpers:`app.debounce((my_data)=>Salla.log(my_data), 'hello there - *')`\n *\n * @param fn\n * @param delay\n * @return {function(...[*]): Promise<unknown>}\n */\nfunction debounce(fn, delay) {\n  delay = delay || 100;\n  let resolves = [];\n  let timer;\n  return function (...args) {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      let result = fn(...args);\n      resolves.forEach((r) => r(result));\n      resolves = [];\n    }, delay);\n    //@ts-ignore\n    return new Promise((r) => resolves.push(r));\n  };\n}\n\n/**\n * Use It When You want to grab data from input names with brackets Ex.\n * <input name=\"products[0][id]\" value...>\n * <input name=\"products[0][name]\" value...>\n * <input name=\"products[1][id]\" value...>\n * <input name=\"products[1][name]\" value...>\n * will be like: {products:[{id:.., name:..},{id:.., name:..}]}\n * @param name\n * @param value\n * @param dataset\n * @return {{name, value}|{name, value: (*|[*, *]|[string, *]|{}|[*])}}\n */\nfunction getInputDataWithName(name, value, dataset = {}) {\n  if (name.includes(\"[\")) {\n    let nameLevels = name.split(\"]\").join(\"\").split(\"[\");\n    const parentKey = nameLevels[0];\n    // Check if dataset is an object before accessing its properties\n    const parentData = dataset && typeof dataset === 'object' ? dataset[parentKey] : undefined;\n    return { name: parentKey, value: getLeveledData(nameLevels.slice(1), value, parentData) };\n  }\n  return { name: name, value: value };\n}\n\n/**\n * in case input name is array for example \"jamal[4655]\" let's fix it\n * This Helper method to get suitable array data, Ex.\n * jamal[]=1\n * jamal[]=2\n * final result will be: {jamal:[1,2]}\n *\n * @param {String[]} nameLevels\n * @param {string|mixed} value\n * @param {{}|undefined} existedData\n * @return {*[]|*|(string|*)[]|{}}\n */\nfunction getLeveledData(nameLevels, value, existedData) {\n  // TODO: typo, rename it to `getLabeledData`\n  let currentName = nameLevels[0];\n\n  //it's an array, so add value ass array\n  if (existedData && nameLevels.length == 0) {\n    if (Array.isArray(existedData)) {\n      existedData.push(value);\n      return existedData;\n    }\n\n    //todo::handle in case it's object\n    return [existedData, value];\n  }\n\n  if (Array.isArray(existedData)) {\n    existedData.push(value);\n    return existedData;\n  }\n\n  if (typeof existedData === \"string\") {\n    return [existedData, value];\n  }\n\n  //it's nested data\n  if (existedData) {\n    existedData[currentName] = getLeveledData(nameLevels.slice(1), value, existedData[currentName]);\n    return existedData;\n  }\n\n  if (currentName) {\n    //@ts-ignore\n    return { [currentName]: getLeveledData(nameLevels.slice(1), value) };\n  }\n\n  //handling \"[]\" without name\n  return currentName === \"\" ? [value] : value;\n}\n\n/*\nwindow.onbeforeunload = function (event) {\n  Salla.document.event.leaving(event);\n  if (!Salla.config.get(\"canLeave\")) {\n    event.preventDefault();\n    return false;\n  }\n};\n*/\nexport function setNested(object, key, value) {\n  let schema = object;\n  let keys = key.split(\".\");\n  let len = keys.length;\n  for (let i = 0; i < len - 1; i++) {\n    let elem = keys[i];\n    if (!schema[elem]) schema[elem] = {};\n    schema = schema[elem];\n  }\n\n  schema[keys[len - 1]] = value;\n  return object;\n}\n\nexport function getNested(object, key, default_) {\n    //we have issue on the import because on of the new packages we upgraded pnpm, this is last time it was working without it: https://github.com/SallaApp/twilight/blob/0215beb4a1f89fb233df9b173134d7571882f5fe/pnpm-lock.yaml\n    let data = lodashGet.default\n    ? lodashGet.default(object, key)\n    : lodashGet(object, key);\n    return data !== undefined ? data : default_;\n}\n\nexport function hasApplePay(): boolean {\n  try {\n    return !!window.ApplePaySession?.canMakePayments();// && !/snapchat/i.test(navigator.userAgent);\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\nexport function isIframe() {\n  return window.self !== window.top\n}\n\n\nexport function isPreview() {\n  return isIframe()\n}\n\n\n/**\n * @type {{debounce: (function(*, *=): function(...[*]): Promise<unknown>), inputData: ((function(*=, *=, *): ({name, value}|{name, value: (*|*[]|(string|*)[]|{})}))|*), digitsOnly: ((function(*=, *=): (undefined|*))|*)}}\n */\nexport default {\n  // Numbers helpers\n  digitsOnly: digitsOnly,\n  inputDigitsOnly: inputDigitsOnly,\n  number: number,\n  money: money,\n\n  //environment and context helpers\n  isIframe,\n  isPreview,\n\n  // Nested objects helpers\n  setNested: setNested,\n  getNested: getNested,\n  inputData: getInputDataWithName,\n\n  // Url helpers\n  url: url,\n  addParamToUrl: url.addParamToUrl,\n\n  // other\n  debounce: debounce,\n  hasApplePay: hasApplePay,\n};\n","String.prototype.toStudlyCase = function () {\n    return this.trim() //remove first spaces\n        .replace(/([^a-zA-Z\\d].)/g, function (t) {//get\n            return t.toUpperCase()\n                .replace(/[^a-zA-Z\\d]/g, '');\n        });\n};\n\nString.prototype.toDatasetName = function () {\n    return this.startsWith('data-')\n        ? this.substr(5).toStudlyCase()\n        : this.toStudlyCase();\n};\n\n// TODO: Check the importance of this method. Or add mode detail information.\n// helper method to get string as selector, by adding (#) to the beginning if it's not start with one.\nString.prototype.toSelector = function () {\n    // todo:: add html tags if it's needed.\n    return this.trim().startsWith(\".\") || this.trim().startsWith(\"#\")\n        ? this.toString()\n        : \"#\" + this.toString();\n};\n\nString.prototype.replaceArray = function (find:string, replace:string) {\n    var replaceString = this;\n    var regex:RegExp;\n    for (var i = 0; i < find.length; i++) {\n        regex = new RegExp(find[i], \"g\");\n        replaceString = replaceString.replace(regex, replace[i]);\n    }\n    return replaceString;\n};\n\nString.prototype.rtrim = function (s?:string) {\n    if (s === undefined)\n        s = '\\\\s';\n    return this.replace(new RegExp(\"[\" + s + \"]*$\"), '');\n};\n\nString.prototype.ltrim = function (s?:string) {\n    if (s === undefined)\n        s = '\\\\s';\n    return this.replace(new RegExp(\"^[\" + s + \"]*\"), '');\n};\n\nString.prototype.digitsOnly = function () {\n    return Salla.helpers.digitsOnly(this);\n};","\"use strict\";\n/**\n * A logger to help us to use Salla.logger.log like console.log\n *\n * @namespace Salla.logger\n *\n * @credits @Ammar Hasan\n * @see https://stackoverflow.com/a/21856736\n *\n */\nexport default (function (c) {\n  \"use strict\";\n  let history=[];\n  let prefixes=[];\n  \n  let proxy = {\n    log: function (a, type) {\n      if (!c) {\n        return; /* return or call your custom function here */\n      }\n\n      //@ts-ignore\n      if (!salla.config.isDebug()) {\n        return;\n      }\n\n      history.push([type,a]);\n\n      // let's force trace for all logs when the debug is trace level\n      //@ts-ignore\n      if (salla.config.get('debug') === 'trace') {\n        type = 'trace';\n      }\n      let colorableTypes = {\n        event: '#CFF680',\n        backend: '#7b68ee'\n      };\n\n      let l = c.log,\n        f = type === undefined ? l : (this.__dict__[type] || l);\n\n      let style = ['%cTwilight', 'color: #5cd5c4;font-weight:bold; border:1px solid #5cd5c4; padding: 2px 6px; border-radius: 5px;'];\n      prefixes.forEach(prefix => {\n        style[0] += prefix[0];\n        style.push(prefix[1]);\n      })\n\n      let color = colorableTypes[type];\n      if (color) {\n        style[0] += '%c' + type[0].toUpperCase() + type.substring(1);\n        style.push(`margin-left: 5px;color: ${color};font-weight:bold; border:1px solid ${color}; padding: 2px 6px; border-radius: 5px;`)\n      }\n\n      f.call(c, ...style.concat(...a))\n    },\n    __dict__: {\n      \"trace\": c.trace,\n      \"debug\": c.debug,\n      \"info\": c.info,\n      \"warn\": c.warn,\n      \"error\": c.error\n    }\n  };\n\n  return {\n    event: function () {\n      proxy.log(arguments, \"event\");\n    },\n    trace: function () {\n      proxy.log(arguments, \"trace\");\n    },\n    debug: function () {\n      proxy.log(arguments, \"debug\");\n    },\n    info: function () {\n      proxy.log(arguments, \"info\");\n    },\n    warn: function () {\n      proxy.log(arguments, \"warn\");\n    },\n    error: function () {\n      proxy.log(arguments, \"error\");\n    },\n    log: function () {\n      proxy.log(arguments, undefined);\n    },\n    //use this to pass messages from backEnd, no need to add documentations, because it will no passed in production\n    backend: function () {\n      proxy.log(arguments, \"backend\");\n    },\n    //this for internal usage to pass multi logs using one function, no need to add it to documentation @see \\Salla\\Core\\Traits\\WithStageLogger::debug\n    logs: function (logs) {\n      //@ts-ignore\n      [logs].flat().forEach(logData => logData && proxy.log([logData].flat(), 'backend'));\n    },\n    history: function () {\n      history.map(payload => c.log(payload[0], ...payload[1]));\n      return history;\n    },\n    addPrefix: function (prefix) {\n      Array.isArray(prefix) ? prefixes.unshift(prefix) : this.warn('addPrefix receives array only!');\n      return this;\n    }\n  };\n}(console))\n","/**\n * @namespace Salla.config\n *\n * @property {any} properties_\n */\nexport default class Config {\n\n  default_properties: object|any;\n  properties_: object|any;\n\n  constructor(properties = {}, default_properties = {}) {\n    this.default_properties = default_properties;\n    this.properties_ = { ...this.default_properties, ...properties };\n  }\n\n  merge(config:object) {\n    this.properties_ = {...this.properties_, ...config};\n\n    this.properties_.store = { ...this.default_properties?.store||{}, ...this.properties_.store };\t\n    return this;\n  }\n\n  set(key:string, value:any) {\n    if (key.includes(\".\")) {\n      Salla.helpers.setNested(this.properties_, key, value);\n      return this;\n    }\n    this.properties_[key] = value;\n    return this;\n  }\n\n  /**\n   * @param {string|undefined} isoCode\n   * @return {Currency}\n   */\n  currency(isoCode:string|undefined = undefined){\n    isoCode = isoCode || this.get('user.currency_code');\n    return this.get('currencies.' + isoCode) || Object.values(this.get('currencies'))[0];\n  }\n\n\n  /**\n   * @param {string} key\n   * @param {null|any} default_\n   * @return {any}\n   */\n  get(key:string, default_ = null) {\n    if (key.includes(\".\")) {\n      return Salla.helpers.getNested(this.properties_, key, default_);\n    }\n    return this.properties_.hasOwnProperty(key) ? this.properties_[key] || default_ : default_ || undefined;\n  }\n\n  all() {\n    return this.properties_;\n  }\n\n  isDebug() {\n    return this.get('debug') || Salla.storage.get('debug');\n  }\n}\n","import {EventEmitter2, OnOptions} from \"eventemitter2\";\n\n/**\n * @namespace Salla.event\n *\n * @property {string} delimiter\n * @property {array} loggableEvents - log errors or important events.\n */\nexport default class Emitter extends EventEmitter2 {\n  delimiter: string;\n  body?: HTMLBodyElement;\n  logableEvents: string[];\n  emittedEvents: Set<string>;\n  ingoreLogEvents: string[];\n  noneFireableActions: string[];\n  constructor() {\n    let delimiter = \"::\";\n    super({\n      wildcard: true,\n      delimiter: delimiter,\n      newListener: false,\n      removeListener: false,\n      maxListeners: 10,\n      verboseMemoryLeak: false,\n      ignoreErrors: false,\n    });\n    this.delimiter = delimiter;\n\n    //todo:: why we need this?\n    if (typeof document !== \"undefined\") {\n      this.body = document.querySelector(\"body\");\n    }\n\n    this.logableEvents = [\"cart::item.added.failed\", \"cart::item.deleted.failed\"];\n\n    this.ingoreLogEvents = [\n      \"document::click\",\n      \"document::keyup\",\n      \"document::change\",\n      //'document::submit',\n    ];\n\n    this.noneFireableActions = [\"document.request\"];\n    this.emittedEvents = new Set();\n\n  }\n\n  /**\n   * @param {string} event_name\n   * @param data\n   *\n   * @deprecated , legacy code, use dispatch() instead\n   */\n  createAndDispatch(event_name, ...data) {\n    this.dispatch(event_name, ...data);\n  }\n\n  //@ts-ignore\n  emit(event_name, ...data) {\n    this.emittedEvents.add(event_name);\n    /**\n     * if the event, is api/event method, call it,\n     * ex: cart::quick.add call Salla.api.cart.quickAdd(...data)\n     * we don't used Salla.call(actionName)(...data), to avoid losing this scope in our apis.\n     *\n     * @deprecated don't use it anymore\n     */\n    let actionName = event_name.replace(\"::\", \".\");\n    if (!this.noneFireableActions.includes(actionName) && Salla.call && typeof Salla.call(actionName) === \"function\") {\n      Salla.log(`'Salla.${actionName}(...)' triggered using event '${event_name}'`);\n      actionName = actionName.split(\".\"); //['cart','addItem']\n      //when we are passing event from back end using `twilight()->addEvent('eventName', param1, param2, param3)`, here we will pass them back as variables\n      if (Array.isArray(data[0])) {\n        data = data[0];\n      }\n      salla[actionName[0]][actionName[1]](...data);\n      return;\n    }\n\n\n    super.emit(event_name, ...data);\n    this.trackEvents(event_name, ...data);\n  }\n\n  /**\n   * Executes a callback either immediately if an event has already been emitted, or after the event occurs.\n   * This is useful for handling cases where you need to respond to an event that might have already occurred\n   * or will occur in the future.\n   * \n   * @param {string} event_name - The name of the event to check/wait for\n   * @param {Function|null} callback - The callback function to execute\n   * @returns {Promise<any>} A promise that resolves with the callback's return value\n   * \n   * @example\n   * // Wait for 'cart::item.added' event if it hasn't occurred yet\n   * event.onlyWhen('cart::item.added', () => {\n   *   // This will run either immediately if cart is loaded\n   *   // or after cart loads if it hasn't loaded yet\n   *   console.log('Cart is ready');\n   * });\n   * //or\n   * event.onlyWhen('cart::item.added').then(() => {\n   *   // This will run either immediately if cart is loaded\n   * })\n   */\n  onlyWhen(event_name, callback): Promise<any> {\n    callback = callback || function() {};\n    return new Promise((resolve) => this.emittedEvents.has(event_name)\n            ? resolve(callback())\n            : this.once(event_name, () => resolve(callback()))\n        );\n  }\n\n  emitAsync(event_name, ...data) {\n    this.emittedEvents.add(event_name);\n    //to make sure that data object will not be affected by track process\n    let result = super.emitAsync(event_name, ...data);\n    try {\n      this.trackEvents(event_name, ...data);\n    } catch (e) {\n      Salla.logger.warn(`error on tracking event (${event_name})`, data, e);\n    }\n    return result;\n  }\n\n  trackEvents(event_name, ...data){\n    // let's send the event to data layer\n    if (typeof window !== \"undefined\") {\n      try {\n        window.dataLayer = window.dataLayer || [];\n        /**\n         * data is coming as an array like this:\n         * [{\"services\": {\"intercom\": {\"app_id\": \"***\"}}}]\n         * we will merge it into one object  like this:\n         * {event: event_name, \"services\": {\"intercom\": {\"app_id\": \"***\"}}}\n         */\n        let dataLayerObject = {event: event_name};\n        data.map(item => typeof item === 'object' && (dataLayerObject = {...dataLayerObject, ...item}));\n        window.dataLayer.push(dataLayerObject);\n      }catch(e){\n        salla.logger.error(e.message);\n      }\n    }\n\n    //if there is need to log errors, or events, lets do it here.\n    if (Salla.logger && !this.ingoreLogEvents.includes(event_name)) {\n      Salla.logger.event(event_name, ...data);\n    }\n    this.dispatchMobileEvent(event_name,  ...data);\n  }\n  /**\n   * Fire Event with data\n   *\n   * @param {string} event_name - action name like `cart::addItem` or event name like `cart::item.added`\n   * @param {any|undefined} data\n   * @data {{payload}} data\n   */\n  dispatch(event_name, ...data) {\n    return this.emit(event_name, ...data);\n  }\n\n  /**\n   * Fire multi events using object of events\n   *\n   * @param {Object.<string, *>} events\n   */\n  dispatchEvents(events) {\n    if (!events) {\n      Salla.log(\"No Events To Dispatch!\", events);\n      return;\n    }\n\n  if(typeof events !== \"object\" || Array.isArray(events)){\n    Salla.log(\"Events object is wrong, it should be object of {event:payload}\", events);\n    return;\n  }\n\n    for (const [event_name, payload] of Object.entries(events)) {\n      this.dispatch(event_name, payload);\n    }\n  }\n\n  /**\n   * Alias for on function\n   *\n   * @param {string} eventName\n   * @param {function} callback\n   * @param options\n   * @deprecated use on\n   */\n  addListener(eventName, callback, options?: boolean | OnOptions) {\n    return this.on(eventName, callback, options);\n  }\n\n  /**\n   * Alias for on function\n   *\n   * @param {string} eventName\n   * @param {function} callback\n   * @param {OnOptions} options\n   * @deprecated use on\n   */\n  addEventListener(eventName, callback, options?: boolean | OnOptions) {\n    return this.on(eventName, callback, options);\n  }\n\n  /**\n   * Alias for this.addListener\n   * @param {string} eventName\n   * @param {function} callback\n   */\n  listen(eventName, callback) {\n    return this.on(eventName, callback);\n  }\n\n  /**\n   * Register Global listener will allow you to track all events in salla,\n   * all Salla events will push to it.\n   *\n   * @param {string} name\n   * @param {function} callback\n   * @deprecated use onAny, it maybe used in the apps\n   */\n  registerGlobalListener(name, callback) {\n    return this.onAny(callback);\n  }\n\n  /**\n   * This help to push an event to mobile app.\n   *\n   * @param eventName\n   * @param details\n   * @returns {string}\n   */\n  dispatchMobileEvent(eventName, details = {}) {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n\n    if (window.webkit) {\n      try {\n        window.webkit.messageHandlers.callbackHandler.postMessage(\n          JSON.stringify({\n            event: eventName,\n            details: details,\n          })\n        );\n        return;\n      } catch (err) {\n        Salla.log(err, \"The native context does not exist yet\");\n      }\n    }\n\n    if (window.Android?.customEventWithData) {\n      try {\n        window.Android.customEventWithData(eventName, JSON.stringify({ details: details }));\n      } catch (err) {\n        Salla.log(err, \"The native context does not exist yet\");\n      }\n      return;\n    }\n\n    // Flutter support\n    if (window.flutter_inappwebview) {\n      try {\n        window.flutter_inappwebview.callHandler('sallaEvent', {\n          event: eventName,\n          details: details,\n        });\n      } catch (err) {\n        Salla.log(err, \"The Flutter context does not exist yet\");\n      }\n      return;\n    }\n  }\n}\n","/// <reference path=\"../types/global.d.ts\" />\ndeclare const Salla: any;\n\nimport * as createStore from \"store/src/store-engine\"\nimport * as localStorage from \"store/storages/localStorage\"\nimport * as sessionStorage from \"store/storages/sessionStorage\"\nimport * as cookieStorage from \"store/storages/cookieStorage\"\nimport * as memoryStorage from \"store/storages/memoryStorage\"\nimport IStorage, { ItemWithTTL, StoreJsAPI } from \"../types/storage\"\n\nconst localStore = createStore.createStore([\n  localStorage,\n  sessionStorage,\n  cookieStorage,\n  memoryStorage,\n], []);\n\nconst sessionStore = createStore.createStore([sessionStorage], []);\nconst cookieStore = createStore.createStore([cookieStorage], []);\n\n\nexport default class Storage implements IStorage {\n  store: StoreJsAPI;\n  session: StoreJsAPI;\n  cookie: StoreJsAPI;\n  clearableItems: string[] = ['cart', 'user', 'salla::wishlist', 'token'];\n\n  constructor() {\n    Salla.event.on(\"storage::item.remove\", (key) => this.remove(key));\n    Salla.event.on(\"storage::item.set\", (key, value) => this.set(key, value));\n    this.store = localStore;\n\n    this.session = sessionStore;\n    this.cookie = cookieStore;\n  }\n\n  set(key: string, value: unknown) {\n    if (key.includes(\".\")) {\n      const firstKey = key.split(\".\")[0];\n      let parentObject = { [firstKey]: this.store.get(firstKey) };\n      parentObject = Salla.helpers.setNested(parentObject, key, value);\n      return this.store.set(firstKey, parentObject[firstKey]);\n    }\n    return this.store.set(key, value);\n  }\n\n  remove(key: string) {\n    return this.store.remove(key);\n  }\n\n  clearAll(force = false) {\n    if (force) {\n      return  this.store.clearAll();\n    }\n    this.clearableItems.forEach(key => {\n      this.store.remove(key);\n    });\n  }\n\n  get(key, value) {\n    if (key.includes(\".\")) {\n      const firstKey = key.split(\".\")[0];\n      return Salla.helpers.getNested({ [firstKey]: this.store.get(firstKey) }, key);\n    }\n    return this.store.get(key, value);\n  }\n\n  private prefixKey(key: string) {\n    return `${key}_${Salla.config.get('store.id')}`\n  }\n\n  setWithTTL(key: string, value: unknown, ttlInMinutes = 10, store: 'store' | 'session' | 'cookie' = 'store') {\n\n    const prefixedKey = this.prefixKey(key)\n    const expiry = new Date().getTime() + (ttlInMinutes * 60 * 1000)\n    return this[store].set(prefixedKey, {\n      value,\n      expiry\n    });\n  }\n\n  getWithTTL(key: string, defaultValue = null, store: 'store' | 'session' | 'cookie' = 'store') {\n\n    const prefixedKey = this.prefixKey(key)\n    const item = this[store].get(prefixedKey) as (ItemWithTTL | null);\n\n    if (!item) {\n      return defaultValue;\n    }\n    const isItemExpired = new Date().getTime() > item.expiry\n\n    if (isItemExpired) {\n      this[store].remove(prefixedKey);\n      return defaultValue;\n    }\n\n    return item.value;\n  }\n}\n","/**\n * @namespace Salla.cookie\n */\nexport default class Cookie {\n  constructor() {\n    //@ts-ignore\n    Salla.event.on(\"cookies::remove\", (key) => this.remove(key));\n    //@ts-ignore\n    Salla.event.on(\"cookies::add\", (key, value) => this.set(key, value));\n  }\n  keysToRemove: Array<string> = [\n    \"__said\",\n    \"__ssid\",\n    \"theme_edit\",\n    \"ws_port\",\n    \"s-token\"\n  ];\n  dynamicKeysToRemove: Array<string> = [\"affiliate\", \"cart\"];\n\n  get(key) {\n    //@ts-ignore\n    return document.cookie\n      .split(\"; \")\n      .find((row) => row.startsWith(key + \"=\"))\n      ?.split(\"=\")[1];\n  }\n\n  set(key, value = \"\", days = 10) {\n    let expires = \"\";\n    if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = '; expires=' + date.toUTCString();\n    }\n\n    let sameSite = salla.helpers.isIframe() ? 'None' : 'Lax';\n\n    document.cookie = `${key}=${value}${expires}; path=/; SameSite=${sameSite}; secure`;\n\n    return this;\n  }\n\n  remove(key) {\n    let sameSite = salla.helpers.isIframe() ? 'None' : 'Lax';\n    document.cookie = `${key}=; Max-Age=0; path=/; SameSite=${sameSite}; secure`;\n    return this;\n  }\n\n  clearAll(force = false) {\n    return this.clean(force);\n  }\n\n\n  clean(force) {\n    document.cookie.split(\";\")\n      .map(cookie => cookie.split(\"=\")[0].trim())\n      .filter(cookieName => force || this.keysToRemove.includes(cookieName) || this.dynamicKeysToRemove.some(key => cookieName.startsWith(key)))\n      .forEach(cookieName => this.remove(cookieName));\n    return this;\n  }\n\n  getCookieByPrefix(prefix) {\n    return document.cookie.split('; ')\n      .map(cookie => cookie.split('=')[0])\n      .filter(key => key.startsWith(prefix));\n  }\n\n  clearCookieByPrefix(prefix) {\n    return this.getCookieByPrefix(prefix)\n      .forEach(cookieName => this.remove(cookieName));\n  }\n}\n","\"use strict\";\n\nif (typeof window !== \"undefined\") {\n  window.salla = window.salla || window.Salla || {};\n  window.Salla = window.salla;\n}\nif (typeof global !== \"undefined\") {\n    //@ts-ignore\n    global.salla = global.salla || global.Salla || {};\n    //@ts-ignore\n    global.Salla =global.salla;\n}\n\n// loading helpers object and link it to salla\nimport Helpers from \"./helpers\"\nimport Logger from \"./logger\"\nimport Config from \"./config\"\nimport Emitter from \"./event\"\nimport Storage from \"./storage\"\nimport Cookie from \"./cookie\"\n\nSalla.status = 'base';\n// const Salla = {};\nSalla.config = new Config();\nSalla.logger = Logger;\nSalla.event = new Emitter();\nSalla.helpers = Helpers;\nSalla.storage = new Storage();\nSalla.cookie = new Cookie();\n\n// alias\nSalla.log = Salla.logger.log;\nSalla.money = Salla.helpers.money;\nSalla.url = Salla.helpers.url;\nSalla.versions = {\n  base: '[BASE-VI]{version} - {date}[/BASE-VI]'\n};\n\nexport default Salla"],"names":["isToEnglish","num","regex","ar","en","find","Salla","config","get","replace","i","length","RegExp","getOnlyDecimal","value","dotsCount","concat","match","is_full_url","url","startsWith","storeUrl","window","location","href","split","slice","join","rtrim","ltrim","key","encodeURIComponent","baseUrl","path","origin","asset","existedData","Array","isArray","push","currentName","getLeveledData","nameLevels","self","top","String","prototype","toStudlyCase","trim","t","toUpperCase","toDatasetName","this","substr","toString","replaceArray","replaceString","s","undefined","digitsOnly","helpers","number","inputDigitsOnly","input","is_decimal","new_val","parseInt","min","max","maxLength","dataset","hasOwnProperty","logger","warn","useSarSymbolIfEnabled","currency","money","symbol","amount","includes","isIframe","setNested","object","schema","keys","len","elem","getNested","default","lodashGet","data","default_","name","parentData","parentKey","_a","URL","hostname","width","height","cdnUrl","type","pageName","salla","debounce","fn","delay","resolves","_i","arguments","clearTimeout","timer","setTimeout","result","apply","args","r","Promise","hasApplePay","error","console","c","history","prefixes","proxy","Logger","a","isDebug","l","log","f","forEach","prefix","style","color","event","backend","substring","call","__spreadArray","trace","debug","info","logs","flat","logData","map","payload","unshift","Config","default_properties","properties","properties_","_assign","store","isoCode","Object","values","all","storage","Emitter","_super","_this","wildcard","delimiter","newListener","removeListener","maxListeners","verboseMemoryLeak","document","logableEvents","ingoreLogEvents","noneFireableActions","EventEmitter2","__extends","createAndDispatch","event_name","dispatch","emittedEvents","add","actionName","emit","trackEvents","onlyWhen","callback","resolve","has","once","emitAsync","dataLayer","dataLayerObject_1","item","e","dispatchMobileEvent","dispatchEvents","events","entries","_b","addListener","eventName","options","on","addEventListener","listen","registerGlobalListener","onAny","details","webkit","messageHandlers","callbackHandler","postMessage","JSON","stringify","Android","customEventWithData","flutter_inappwebview","callHandler","localStorage","createStore","sessionStorage","cookieStorage","memoryStorage","sessionStore","cookieStore","cookieStorage__namespace","Storage","clearableItems","remove","set","localStore","session","firstKey","parentObject","clearAll","force","prefixKey","ttlInMinutes","prefixedKey","expiry","Date","getTime","defaultValue","Cookie","keysToRemove","cookie","row","days","expires","date","sameSite","clean","filter","cookieName","dynamicKeysToRemove","some","getCookieByPrefix","clearCookieByPrefix","global","status","Helpers","base"],"mappings":"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"}